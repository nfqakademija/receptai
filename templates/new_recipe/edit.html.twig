{% extends 'base.html.twig' %}

{% block title %}Edit Recipe{% endblock %}

{% block body %}
    <div class="container">
        <span id="meal-plan-title"> <h1> Edit this recipe! </h1></span>
        {{ form_start(form) }}
        <div class="form-group">
            <div>
                <h3>{{ form_label(form.title) }}</h3>
                {{ form_errors(form.title) }}
                {{ form_widget(form.title) }}
                {{ form_help(form.title) }}
            </div>
            <div>
                <h3>{{ form_label(form.description) }}</h3>
                {{ form_errors(form.description) }}
                {{ form_widget(form.description) }}
                {{ form_help(form.description) }}
                {% do form.description.setRendered %}
            </div>
            <h3>{{ form_label(form.image) }}</h3>
            <div class="row">
                <div class="col-sm-9">
                    {{ form_widget(form.image, {
                        attr: {
                            'placeholder': 'Select an article image'
                        }
                    }) }}
                </div>
                <div class="col-sm-3">
                    {% if form.vars.data.imageUrl|default %}
                        <img src="{{ uploaded_asset(form.vars.data.imageUrl) }}" height="100">
                    {% endif %}
                </div>
            </div>
        </div>

        <h3 class="sections"><b>Ingredients</b></h3>
        <ul class="ingredients list-without-bullets" data-prototype="{{ form_widget(form.ingredients.vars.prototype)|e('html_attr') }}">
            {% for ingredient in form.ingredients %}
                <li>
                    {{ form_row(ingredient.title) }}
                    {{ form_row(ingredient.measure, {value: measures[loop.index0].id|trim}) }}
                    {{ form_row(ingredient.amount) }}
                </li>
            {% endfor %}
        </ul>

        <h3 class="sections"><b>Tags</b></h3>
        <ul class="tags list-without-bullets" data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
            {% for tag in form.tags %}
                <li>{{ form_row(tag.title, {value: tags[loop.index0].id|trim}) }}</li>
            {% endfor %}
        </ul>

        <div class="wrapper">
            <button type="submit" class="next-plan-mine align-content-center">{{ 'generated_recipe.submit'|trans }}</button>
        </div>
        {% do form.save.setRendered %}
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <script>
        $('.custom-file-input').on('change', function(event) {
            var inputFile = event.currentTarget;
            $(inputFile).parent()
                .find('.custom-file-label')
                .html(inputFile.files[0].name);
        });

        var $collectionHolder;

        // setup an "add a tag" link
        var $addIngredientButton = $('<button type="button" class="btn-secondary btn">Add new ingredient</button>');
        var $newLinkLi = $('<div><br><hr></div>').append($addIngredientButton);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.ingredients');

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            $collectionHolder.find('li').each(function() {
                addIngredientFormDeleteLink($(this));
            });
            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addIngredientButton.on('click', function(e) {
                // add a new tag form (see next code block)
                addIngredientForm($collectionHolder, $newLinkLi);
            });
        });

        function addIngredientForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            addIngredientFormDeleteLink($newFormLi);
        }

        function addIngredientFormDeleteLink($ingredientFormLi) {
            var $removeFormButton = $('<button type="button" class="btn-danger btn">Delete this ingredient</button>');
            $ingredientFormLi.append($removeFormButton);

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                $ingredientFormLi.remove();
            });
        }

        var $tagsCollectionHolder;

        // setup an "add a tag" link
        var $addTagButton = $('<button type="button" class="btn-secondary btn">Add a tag</button>');
        var $newTagLinkLi = $('<div><br><hr></div>').append($addTagButton);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $tagsCollectionHolder = $('ul.tags');

            // add a delete link to all of the existing tag form li elements
            $tagsCollectionHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });

            // add the "add a tag" anchor and li to the tags ul
            $tagsCollectionHolder.append($newTagLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $tagsCollectionHolder.data('index', $tagsCollectionHolder.find(':input').length);

            $addTagButton.on('click', function(e) {
                // add a new tag form (see next code block)
                addTagForm($tagsCollectionHolder, $newTagLinkLi);
            });
        });
        function addTagForm($tagsCollectionHolder, $newTagLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $tagsCollectionHolder.data('prototype');

            // get the new index
            var index = $tagsCollectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $tagsCollectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newTagLinkLi.before($newFormLi);

            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormButton = $('<button type="button" class="btn-danger btn">Delete this tag</button>');
            $tagFormLi.append($removeFormButton);

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
    </script>

{% endblock %}
