{% extends 'base.html.twig' %}

{% block title %}Add New Recipe{% endblock %}

{% block body %}
    <h1>Add a new recipe!</h1>

    {{ form_start(form) }}
    {{ form_row(form.title) }}
    {{ form_row(form.description) }}
    {{ form_row(form.image) }}
    {{ form_label(form.ingredients, 'Ingredients') }}
    <ul class="ingredients" data-prototype="{{ form_widget(form.ingredients.vars.prototype)|e('html_attr') }}">
        {% for ingredient in form.ingredients %}
            <li>{{ form_row(ingredient) }}</li>
        {% endfor %}
    </ul>
    {{ form_label(form.tags, 'Tags') }}
    <ul class="tags" data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
        {% for tag in form.tags %}
            <li>{{ form_row(tag) }}</li>
        {% endfor %}
    </ul>
    {{ form_end(form) }}
{% endblock %}

{% block javascripts %}
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <script>
        var $collectionHolder;

        // setup an "add a tag" link
        var $addIngredientButton = $('<button type="button" class="btn-secondary btn">Add new ingredient</button>');
        var $newLinkLi = $('<div><br><hr></div>').append($addIngredientButton);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.ingredients');

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            $collectionHolder.find('li').each(function() {
                addIngredientFormDeleteLink($(this));
            });
            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addIngredientButton.on('click', function(e) {
                // add a new tag form (see next code block)
                addIngredientForm($collectionHolder, $newLinkLi);
            });
        });

        function addIngredientForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            addIngredientFormDeleteLink($newFormLi);
        }

        function addIngredientFormDeleteLink($ingredientFormLi) {
            var $removeFormButton = $('<button type="button" class="btn-danger btn">Delete this ingredient</button>');
            $ingredientFormLi.append($removeFormButton);

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                $ingredientFormLi.remove();
            });
        }

        var $tagsCollectionHolder;

        // setup an "add a tag" link
        var $addTagButton = $('<button type="button" class="btn-secondary btn">Add a tag</button>');
        var $newTagLinkLi = $('<div><br><hr></div>').append($addTagButton);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            $tagsCollectionHolder = $('ul.tags');

            // add a delete link to all of the existing tag form li elements
            $tagsCollectionHolder.find('li').each(function() {
                addTagFormDeleteLink($(this));
            });

            // add the "add a tag" anchor and li to the tags ul
            $tagsCollectionHolder.append($newTagLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $tagsCollectionHolder.data('index', $tagsCollectionHolder.find(':input').length);

            $addTagButton.on('click', function(e) {
                // add a new tag form (see next code block)
                addTagForm($tagsCollectionHolder, $newTagLinkLi);
            });
        });
        function addTagForm($tagsCollectionHolder, $newTagLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $tagsCollectionHolder.data('prototype');

            // get the new index
            var index = $tagsCollectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $tagsCollectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newTagLinkLi.before($newFormLi);

            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormButton = $('<button type="button" class="btn-danger btn">Delete this tag</button>');
            $tagFormLi.append($removeFormButton);

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
    </script>

{% endblock %}
